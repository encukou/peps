PEP: 0
Title: Index of Python Enhancement Proposals (PEPs)
Version: $Revision$
Last-Modified: $Date$
Author: barry@zope.com (Barry A. Warsaw)
Status: Active
Type: Informational
Created: 13-Jul-2000
Post-History:


Introduction

    The PEP contains the index of all Python Enhancement Proposals,
    known as PEPs.  PEP numbers are assigned by the PEP Editor, and
    once assigned are never changed.  The CVS history[1] of the PEP
    texts represent their historical record.


Index by Category

     num  title                                        owner
     ---  -----                                        -----

 Meta-PEPs (PEPs about PEPs or Process)

 I     0  Index of Python Enhancement Proposals        Warsaw
 I     1  PEP Guidelines                               Warsaw, Hylton
 I     3  Guidelines for Handling Bug Reports          Hylton
 I     4  Deprecation of Standard Modules              von Loewis
 I     5  Guidelines for Language Evolution            Prescod
 I     6  Bug Fix Releases                             Aahz
 I     7  Style Guide for C Code                       van Rossum
 I     8  Style Guide for Python Code                  van Rossum, Warsaw

 Other Informational PEPs

 I   247  API for Cryptographic Hash Functions         Kuchling
 I   248  Python Database API Specification v1.0       Lemburg
 I   249  Python Database API Specification v2.0       Lemburg

 Accepted PEPs (accepted for Python 2.2; may not be implemented yet)

 S   238  Changing the Division Operator               Zadka, van Rossum
 S   250  Using site-packages on All Platforms         Moore
 I   251  Python 2.2 Release Schedule                  van Rossum, Warsaw
 S   252  Making Types Look More Like Classes          van Rossum
 S   253  Subtyping Built-in Types                     van Rossum

 Open PEPs (under consideration for Python 2.2)

 I    42  Small Feature Requests                       Hylton
 S   237  Unifying Long Integers and Integers          Zadka, van Rossum
 S   241  Metadata for Python Software Packages        Kuchling
 S   243  Module Repository Upload Mechanism           Reifschneider
 S   256  Docstring Processing System Framework        Goodger
 S   257  Docstring Conventions                        Goodger, van Rossum
 S   258  DPS Generic Implementation Details           Goodger
 S   262  Database of Installed Python Packages        Kuchling
 S   263  Defining Python Source Code Encodings        Lemburg
 S   264  Future statements in simulated shells        Hudson

 Py-in-the-sky PEPs (not considered for Python 2.2)

 I   206  2.0 Batteries Included                       Zadka
 S   209  Adding Multidimensional Arrays               Barrett, Oliphant
 S   211  Adding A New Outer Product Operator          Wilson
 SD  212  Loop Counter Iteration                       Schneider-Kamp
 SD  213  Attribute Access Handlers                    Prescod
 S   215  String Interpolation                         Yee
 I   216  Docstring Format                             Zadka
 S   218  Adding a Built-In Set Object Type            Wilson
 SD  219  Stackless Python                             McMillan
 S   222  Web Library Enhancements                     Kuchling
 SD  225  Elementwise/Objectwise Operators             Zhu, Lielens
 S   228  Reworking Python's Numeric Model             Zadka, van Rossum
 S   239  Adding a Rational Type to Python             Zadka
 S   240  Adding a Rational Literal to Python          Zadka
 S   242  Numeric Kinds                                Dubois
 S   245  Python Interface Syntax                      Pelletier
 S   246  Object Adaptation                            Evans
 S   254  Making Classes Look More Like Types          van Rossum

 Finished PEPs (done, implemented in CVS)

 SF  100  Python Unicode Integration                   Lemburg
 IF  160  Python 1.6 Release Schedule                  Drake
 IF  200  Python 2.0 Release Schedule                  Hylton
 SF  201  Lockstep Iteration                           Warsaw
 SF  202  List Comprehensions                          Warsaw
 SF  203  Augmented Assignments                        Wouters
 S   205  Weak References                              Drake
 SF  207  Rich Comparisons                             van Rossum, Ascher
 SF  208  Reworking the Coercion Model                 Schemenauer, Lemburg
 SF  214  Extended Print Statement                     Warsaw
 SF  217  Display Hook for Interactive Use             Zadka
 SF  221  Import As                                    Wouters
 SF  223  Change the Meaning of \x Escapes             Peters
 I   226  Python 2.1 Release Schedule                  Hylton
 S   227  Statically Nested Scopes                     Hylton
 S   229  Using Distutils to Build Python              Kuchling
 SF  230  Warning Framework                            van Rossum
 SF  232  Function Attributes                          Warsaw
 S   234  Iterators                                    Yee, van Rossum
 SF  235  Import on Case-Insensitive Platforms         Peters
 SF  236  Back to the __future__                       Peters
 S   255  Simple Generators                            Schemenauer, et al
 SF  260  Simplify xrange()                            van Rossum
 S   261  Support for "wide" Unicode characters        Prescod

 Empty PEPs (or containing only an abstract)

 ID    2  Procedure for Adding New Modules             Raymond
 SD  210  Decoupling the Interpreter Loop              Ascher
 ID  220  Coroutines, Generators, Continuations        McMillan

 Deferred, Abandoned, and Rejected PEPs

 SR  204  Range Literals                               Wouters
 SR  224  Attribute Docstrings                         Lemburg
 SR  231  __findattr__()                               Warsaw
 SD  233  Python Online Help                           Prescod
 SR  244  The `directive' Statement                    von Loewis
 SR  259  Omit printing newline after newline          van Rossum


Numerical Index

     num  title                                        owner
     ---  -----                                        -----
 I     0  Index of Python Enhancement Proposals        Warsaw
 I     1  PEP Guidelines                               Warsaw, Hylton
 I     2  Procedure for Adding New Modules             Raymond
 I     3  Guidelines for Handling Bug Reports          Hylton
 I     4  Deprecation of Standard Modules              von Loewis
 I     5  Guidelines for Language Evolution            Prescod
 I     6  Bug Fix Releases                             Aahz
 I     7  Style Guide for C Code                       van Rossum
 I     8  Style Guide for Python Code                  van Rossum, Warsaw
 I    42  Small Feature Requests                       Hylton

 SF  100  Python Unicode Integration                   Lemburg
 IF  160  Python 1.6 Release Schedule                  Drake

 IF  200  Python 2.0 Release Schedule                  Hylton
 SF  201  Lockstep Iteration                           Warsaw
 SF  202  List Comprehensions                          Warsaw
 SF  203  Augmented Assignments                        Wouters
 SR  204  Range Literals                               Wouters
 S   205  Weak References                              Drake
 I   206  2.0 Batteries Included                       Zadka
 SF  207  Rich Comparisons                             van Rossum, Ascher
 SF  208  Reworking the Coercion Model                 Schemenauer, Lemburg
 S   209  Adding Multidimensional Arrays               Barrett, Oliphant
 SD  210  Decoupling the Interpreter Loop              Ascher
 SD  211  Adding A New Outer Product Operator          Wilson
 SD  212  Loop Counter Iteration                       Schneider-Kamp
 SD  213  Attribute Access Handlers                    Prescod
 SF  214  Extended Print Statement                     Warsaw
 SD  215  String Interpolation                         Yee
 I   216  Docstring Format                             Zadka
 SF  217  Display Hook for Interactive Use             Zadka
 SD  218  Adding a Built-In Set Object Type            Wilson
 SD  219  Stackless Python                             McMillan
 I   220  Coroutines, Generators, Continuations        McMillan
 SF  221  Import As                                    Wouters
 S   222  Web Library Enhancements                     Kuchling
 SF  223  Change the Meaning of \x Escapes             Peters
 SD  224  Attribute Docstrings                         Lemburg
 SD  225  Elementwise/Objectwise Operators             Zhu, Lielens
 I   226  Python 2.1 Release Schedule                  Hylton
 S   227  Statically Nested Scopes                     Hylton
 S   228  Reworking Python's Numeric Model             Zadka, van Rossum
 S   229  Using Distutils to Build Python              Kuchling
 S   230  Warning Framework                            van Rossum
 SR  231  __findattr__()                               Warsaw
 SF  232  Function Attributes                          Warsaw
 SD  233  Python Online Help                           Prescod
 S   234  Iterators                                    Yee, van Rossum
 SF  235  Import on Case-Insensitive Platforms         Peters
 SF  236  Back to the __future__                       Peters
 S   237  Unifying Long Integers and Integers          Zadka, van Rossum
 S   238  Changing the Division Operator               Zadka, van Rossum
 S   239  Adding a Rational Type to Python             Zadka
 S   240  Adding a Rational Literal to Python          Zadka
 S   241  Metadata for Python Software Packages        Kuchling
 S   242  Numeric Kinds                                Dubois
 S   243  Module Repository Upload Mechanism           Reifschneider
 SR  244  The `directive' Statement                    von Loewis
 S   245  Python Interface Syntax                      Pelletier
 S   246  Object Adaptation                            Evans
 I   247  API for Cryptographic Hash Functions         Kuchling
 I   248  Python Database API Specification v1.0       Lemburg
 I   249  Python Database API Specification v2.0       Lemburg
 S   250  Using site-packages on All Platforms         Moore
 I   251  Python 2.2 Release Schedule                  van Rossum, Warsaw
 S   252  Making Types Look More Like Classes          van Rossum
 S   253  Subtyping Built-in Types                     van Rossum
 S   254  Making Classes Look More Like Types          van Rossum
 S   255  Simple Generators                            Schemenauer, et al
 S   256  Docstring Processing System Framework        Goodger
 S   257  Docstring Conventions                        Goodger, van Rossum
 S   258  DPS Generic Implementation Details           Goodger
 SR  259  Omit printing newline after newline          van Rossum
 SF  260  Simplify xrange()                            van Rossum
 S   261  Support for "wide" Unicode characters        Prescod
 S   262  Database of Installed Python Packages        Kuchling
 S   263  Defining Python Source Code Encodings        Lemburg
 S   264  Future statements in simulated shells        Hudson


Key

    I - Informational PEP
    S - Standards Track PEP
    A - Accepted proposal
    R - Rejected proposal
    D - Deferred proposal
    F - Final proposal


Owners

    name                     email address
    ----------------         -------------
    Aahz                     aahz@pobox.com
    Ascher, David            davida@activestate.com
    Barrett, Paul            barrett@stsci.edu
    Drake, Fred              fdrake@acm.org
    Dubois, Paul F.          paul@pfdubois.com
    Evans, Clark C.          cce@clarkevans.com
    Goodger, David           dgoodger@bigfoot.com
    Hudson, Michael          mwh@python.net
    Hylton, Jeremy           jeremy@zope.com
    Kuchling, Andrew         akuchlin@mems-exchange.org
    Lemburg, Marc-Andre      mal@lemburg.com
    Lielens, Gregory         gregory.lielens@fft.be
    von Loewis, Martin       loewis@informatik.hu-berlin.de
    McMillan, Gordon         gmcm@hypernet.com
    Moore, Paul              gustav@morpheus.demon.co.uk
    Oliphant, Travis         oliphant@ee.byu.edu
    Pelletier, Michel        michel@digicool.com
    Peters, Tim              tim@digicool.com
    Prescod, Paul            paul@prescod.net
    Raymond, Eric            esr@snark.thyrsus.com
    Reifschneider, Sean      jafo-pep@tummy.com
    van Rossum, Guido        guido@python.org
    Schemenauer, Neil        nas@arctrix.com
    Schneider-Kamp, Peter    nowonder@nowonder.de
    Warsaw, Barry            barry@zope.com
    Wilson, Greg             gvwilson@ddj.com
    Wouters, Thomas          thomas@xs4all.net
    Yee, Ka-Ping             ping@lfw.org
    Zadka, Moshe             moshez@zadka.site.co.il
    Zhu, Huaiyu              hzhu@users.sourceforge.net


References

    [1] View PEP history online
    http://cvs.sf.net/cgi-bin/viewcvs.cgi/python/python/nondist/peps/



Local Variables:
mode: indented-text
indent-tabs-mode: nil
End:

PEP: 0
Title: Index of Python Enhancement Proposals (PEPs)
Version: $Revision$
Author: barry@digicool.com (Barry A. Warsaw)
Status: Active
Type: Informational
Created: 13-Jul-2000
Post-History:


Introduction

    The PEP contains the index of all Python Enhancement Proposals,
    known as PEPs.  PEP numbers are assigned by the PEP Editor, and
    once assigned are never changed.  The CVS history[1] of the PEP
    texts represent their historical record.


Index by Category

     num  filename      title                                  owner
     ---  ------------  -----                                  -----

 Meta-PEPs (PEPs about PEPs or Process)

 I     0  pep-0000.txt  Index of Python Enhancement Proposals  Warsaw
 I     1  pep-0001.txt  PEP Guidelines                         Warsaw, Hylton
 I     3  pep-0003.txt  Guidelines for Handling Bug Reports    Hylton
 I     4  pep-0004.txt  Deprecation of Standard Modules        von Loewis
 I     5  pep-0005.txt  Guidelines for Language Evolution      Prescod
 I     6  pep-0006.txt  Bug Fix Releases                       Aahz
 I     7  pep-0007.txt  Style Guide for C Code                 van Rossum
 I     8  pep-0008.txt  Style Guide for Python Code          van Rossum, Warsaw

 Other Informational PEPs

 I   247  pep-0247.txt  API for Cryptographic Hash Functions   Kuchling
 I   248  pep-0248.txt  Python Database API Specification v1.0 Lemburg
 I   249  pep-0249.txt  Python Database API Specification v2.0 Lemburg

 Accepted PEPs (accepted for Python 2.2; may not be implemented yet)

 S   238  pep-0238.txt  Changing the Division Operator       Zadka, van Rossum
 S   250  pep-0250.txt  Using site-packages on All Platforms   Moore
 I   251  pep-0251.txt  Python 2.2 Release Schedule            van Rossum
 S   252  pep-0252.txt  Making Types Look More Like Classes    van Rossum
 S   253  pep-0253.txt  Subtyping Built-in Types               van Rossum

 Open PEPs (under consideration for Python 2.2)

 I    42  pep-0042.txt  Small Feature Requests                 Hylton
 S   237  pep-0237.txt  Unifying Long Integers and Integers  Zadka, van Rossum
 S   241  pep-0241.txt  Metadata for Python Software Packages  Kuchling
 S   243  pep-0243.txt  Module Repository Upload Mechanism     Reifschneider
 S   244  pep-0244.txt  The `directive' Statement              von Loewis
 S   254  pep-0254.txt  Making Classes Look More Like Types    van Rossum
 S   256  pep-0256.txt  Docstring Processing System Framework  Goodger
 S   257  pep-0257.txt  Docstring Conventions               Goodger, van Rossum
 S   258  pep-0258.txt  DPS Generic Implementation Details     Goodger
 S   262  pep-0262.txt  Database of Installed Python Packages  Kuchling
 S   263  pep-0263.txt  Defining Python Source Code Encodings  Lemburg

 Py-in-the-sky PEPs (not considered for Python 2.2)

 I   206  pep-0206.txt  2.0 Batteries Included                 Zadka
 S   209  pep-0209.txt  Adding Multidimensional Arrays        Barrett, Oliphant
 S   211  pep-0211.txt  Adding A New Outer Product Operator    Wilson
 SD  212  pep-0212.txt  Loop Counter Iteration                 Schneider-Kamp
 SD  213  pep-0213.txt  Attribute Access Handlers              Prescod
 S   215  pep-0215.txt  String Interpolation                   Yee
 I   216  pep-0216.txt  Docstring Format                       Zadka
 S   218  pep-0218.txt  Adding a Built-In Set Object Type      Wilson
 SD  219  pep-0219.txt  Stackless Python                       McMillan
 S   222  pep-0222.txt  Web Library Enhancements               Kuchling
 SD  225  pep-0225.txt  Elementwise/Objectwise Operators       Zhu, Lielens
 S   228  pep-0228.txt  Reworking Python's Numeric Model     Zadka, van Rossum
 S   239  pep-0239.txt  Adding a Rational Type to Python       Zadka
 S   240  pep-0240.txt  Adding a Rational Literal to Python    Zadka
 S   242  pep-0242.txt  Numeric Kinds                          Dubois
 S   245  pep-0245.txt  Python Interface Syntax                Pelletier
 S   246  pep-0246.txt  Object Adaptation                      Evans

 Finished PEPs (done, implemented in CVS)

 SF  100  pep-0100.txt  Python Unicode Integration             Lemburg
 IF  160  pep-0160.txt  Python 1.6 Release Schedule            Drake
 IF  200  pep-0200.txt  Python 2.0 Release Schedule            Hylton
 SF  201  pep-0201.txt  Lockstep Iteration                     Warsaw
 S   202  pep-0202.txt  List Comprehensions                    Peters
 SF  203  pep-0203.txt  Augmented Assignments                  Wouters
 S   205  pep-0205.txt  Weak References                        Drake
 SF  207  pep-0207.txt  Rich Comparisons                   van Rossum, Ascher
 SF  208  pep-0208.txt  Reworking the Coercion Model       Schemenauer, Lemburg
 SF  214  pep-0214.txt  Extended Print Statement               Warsaw
 SF  217  pep-0217.txt  Display Hook for Interactive Use       Zadka
 SF  221  pep-0221.txt  Import As                              Wouters
 SF  223  pep-0223.txt  Change the Meaning of \x Escapes       Peters
 I   226  pep-0226.txt  Python 2.1 Release Schedule            Hylton
 S   227  pep-0227.txt  Statically Nested Scopes               Hylton
 S   229  pep-0229.txt  Using Distutils to Build Python        Kuchling
 SF  230  pep-0230.txt  Warning Framework                      van Rossum
 SF  232  pep-0232.txt  Function Attributes                    Warsaw
 S   234  pep-0234.txt  Iterators                              Yee, van Rossum
 SF  235  pep-0235.txt  Import on Case-Insensitive Platforms   Peters
 SF  236  pep-0236.txt  Back to the __future__                 Peters
 S   255  pep-0255.txt  Simple Generators                    Schemenauer, et al
 S   260  pep-0260.txt  Simplify xrange()                      van Rossum
 S   261  pep-0261.txt  Support for "wide" Unicode characters  Prescod

 Empty PEPs (or containing only an abstract)

 ID    2  pep-0002.txt  Procedure for Adding New Modules       Raymond
 SD  210  pep-0210.txt  Decoupling the Interpreter Loop        Ascher
 ID  220  pep-0220.txt  Coroutines, Generators, Continuations  McMillan

 Deferred, Abandoned, and Rejected PEPs

 SR  204  pep-0204.txt  Range Literals                         Wouters
 SR  224  pep-0224.txt  Attribute Docstrings                   Lemburg
 SR  231  pep-0231.txt  __findattr__()                         Warsaw
 SD  233  pep-0233.txt  Python Online Help                     Prescod
 SR  259  pep-0259.txt  Omit printing newline after newline    van Rossum


Numerical Index

     num  filename      title                                  owner
     ---  ------------  -----                                  -----
 I     0  pep-0000.txt  Index of Python Enhancement Proposals  Warsaw
 I     1  pep-0001.txt  PEP Guidelines                         Warsaw, Hylton
 I     2  pep-0002.txt  Procedure for Adding New Modules       Raymond
 I     3  pep-0003.txt  Guidelines for Handling Bug Reports    Hylton
 I     4  pep-0004.txt  Deprecation of Standard Modules        von Loewis
 I     5  pep-0005.txt  Guidelines for Language Evolution      Prescod
 I     6  pep-0006.txt  Bug Fix Releases                       Aahz
 I     7  pep-0007.txt  Style Guide for C Code                 van Rossum
 I     8  pep-0008.txt  Style Guide for Python Code          van Rossum, Warsaw
 I    42  pep-0042.txt  Small Feature Requests                 Hylton

 SF  100  pep-0100.txt  Python Unicode Integration             Lemburg
 IF  160  pep-0160.txt  Python 1.6 Release Schedule            Drake

 IF  200  pep-0200.txt  Python 2.0 Release Schedule            Hylton
 SF  201  pep-0201.txt  Lockstep Iteration                     Warsaw
 S   202  pep-0202.txt  List Comprehensions                    Peters
 SF  203  pep-0203.txt  Augmented Assignments                  Wouters
 SR  204  pep-0204.txt  Range Literals                         Wouters
 S   205  pep-0205.txt  Weak References                        Drake
 I   206  pep-0206.txt  2.0 Batteries Included                 Zadka
 SF  207  pep-0207.txt  Rich Comparisons                   van Rossum, Ascher
 SF  208  pep-0208.txt  Reworking the Coercion Model       Schemenauer, Lemburg
 S   209  pep-0209.txt  Adding Multidimensional Arrays        Barrett, Oliphant
 SD  210  pep-0210.txt  Decoupling the Interpreter Loop        Ascher
 SD  211  pep-0211.txt  Adding A New Outer Product Operator    Wilson
 SD  212  pep-0212.txt  Loop Counter Iteration                 Schneider-Kamp
 SD  213  pep-0213.txt  Attribute Access Handlers              Prescod
 SF  214  pep-0214.txt  Extended Print Statement               Warsaw
 SD  215  pep-0215.txt  String Interpolation                   Yee
 I   216  pep-0216.txt  Docstring Format                       Zadka
 SF  217  pep-0217.txt  Display Hook for Interactive Use       Zadka
 SD  218  pep-0218.txt  Adding a Built-In Set Object Type      Wilson
 SD  219  pep-0219.txt  Stackless Python                       McMillan
 I   220  pep-0220.txt  Coroutines, Generators, Continuations  McMillan
 SF  221  pep-0221.txt  Import As                              Wouters
 S   222  pep-0222.txt  Web Library Enhancements               Kuchling
 SF  223  pep-0223.txt  Change the Meaning of \x Escapes       Peters
 SD  224  pep-0224.txt  Attribute Docstrings                   Lemburg
 SD  225  pep-0225.txt  Elementwise/Objectwise Operators       Zhu, Lielens
 I   226  pep-0226.txt  Python 2.1 Release Schedule            Hylton
 S   227  pep-0227.txt  Statically Nested Scopes               Hylton
 S   228  pep-0228.txt  Reworking Python's Numeric Model     Zadka, van Rossum
 S   229  pep-0229.txt  Using Distutils to Build Python        Kuchling
 S   230  pep-0230.txt  Warning Framework                      van Rossum
 SR  231  pep-0231.txt  __findattr__()                         Warsaw
 SF  232  pep-0232.txt  Function Attributes                    Warsaw
 SD  233  pep-0233.txt  Python Online Help                     Prescod
 S   234  pep-0234.txt  Iterators                              Yee, van Rossum
 SF  235  pep-0235.txt  Import on Case-Insensitive Platforms   Peters
 SF  236  pep-0236.txt  Back to the __future__                 Peters
 S   237  pep-0237.txt  Unifying Long Integers and Integers  Zadka, van Rossum
 S   238  pep-0238.txt  Changing the Division Operator       Zadka, van Rossum
 S   239  pep-0239.txt  Adding a Rational Type to Python       Zadka
 S   240  pep-0240.txt  Adding a Rational Literal to Python    Zadka
 S   241  pep-0241.txt  Metadata for Python Software Packages  Kuchling
 S   242  pep-0242.txt  Numeric Kinds                          Dubois
 S   243  pep-0243.txt  Module Repository Upload Mechanism     Reifschneider
 S   244  pep-0244.txt  The `directive' Statement              von Loewis
 S   245  pep-0245.txt  Python Interface Syntax                Pelletier
 S   246  pep-0246.txt  Object Adaptation                      Evans
 I   247  pep-0247.txt  API for Cryptographic Hash Functions   Kuchling
 I   248  pep-0248.txt  Python Database API Specification v1.0 Lemburg
 I   249  pep-0249.txt  Python Database API Specification v2.0 Lemburg
 S   250  pep-0250.txt  Using site-packages on All Platforms   Moore
 I   251  pep-0251.txt  Python 2.2 Release Schedule            van Rossum
 S   252  pep-0252.txt  Making Types Look More Like Classes    van Rossum
 S   253  pep-0253.txt  Subtyping Built-in Types               van Rossum
 S   254  pep-0254.txt  Making Classes Look More Like Types    van Rossum
 S   255  pep-0255.txt  Simple Generators                    Schemenauer, et al
 S   256  pep-0256.txt  Docstring Processing System Framework  Goodger
 S   257  pep-0257.txt  Docstring Conventions               Goodger, van Rossum
 S   258  pep-0258.txt  DPS Generic Implementation Details     Goodger
 SR  259  pep-0259.txt  Omit printing newline after newline    van Rossum
 S   260  pep-0260.txt  Simplify xrange()                      van Rossum
 S   261  pep-0261.txt  Support for "wide" Unicode characters  Prescod
 S   262  pep-0262.txt  Database of Installed Python Packages  Kuchling
 S   263  pep-0263.txt  Defining Python Source Code Encodings  Lemburg


Key

    I - Informational PEP
    S - Standards Track PEP
    A - Accepted proposal
    R - Rejected proposal
    D - Deferred proposal
    F - Final proposal


Owners

    name                     email address
    ----------------         -------------
    Aahz                     aahz@pobox.com
    Ascher, David            davida@activestate.com
    Barrett, Paul            barrett@stsci.edu
    Drake, Fred              fdrake@acm.org
    Dubois, Paul F.          paul@pfdubois.com
    Evans, Clark C.          cce@clarkevans.com
    Goodger, David           dgoodger@bigfoot.com
    Hylton, Jeremy           jeremy@digicool.com
    Kuchling, Andrew         akuchlin@mems-exchange.org
    Lemburg, Marc-Andre      mal@lemburg.com
    Lielens, Gregory         gregory.lielens@fft.be
    von Loewis, Martin       loewis@informatik.hu-berlin.de
    McMillan, Gordon         gmcm@hypernet.com
    Moore, Paul              gustav@morpheus.demon.co.uk
    Oliphant, Travis         oliphant@ee.byu.edu
    Pelletier, Michel        michel@digicool.com
    Peters, Tim              tim@digicool.com
    Prescod, Paul            paul@prescod.net
    Raymond, Eric            esr@snark.thyrsus.com
    Reifschneider, Sean      jafo-pep@tummy.com
    van Rossum, Guido        guido@python.org
    Schemenauer, Neil        nas@arctrix.com
    Schneider-Kamp, Peter    nowonder@nowonder.de
    Warsaw, Barry            barry@digicool.com
    Wilson, Greg             gvwilson@ddj.com
    Wouters, Thomas          thomas@xs4all.net
    Yee, Ka-Ping             ping@lfw.org
    Zadka, Moshe             moshez@zadka.site.co.il
    Zhu, Huaiyu              hzhu@users.sourceforge.net


References

    [1] View PEP history online
    http://cvs.sf.net/cgi-bin/viewcvs.cgi/python/python/nondist/peps/



Local Variables:
mode: indented-text
indent-tabs-mode: nil
End:

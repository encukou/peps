PEP: 356
Title: Python 2.5 Release Schedule
Version: $Revision$
Last-Modified: $Date$
Author: Neal Norwitz, GvR, Anthony Baxter
Status: Draft
Type: Informational
Created: 07-Feb-2006
Python-Version: 2.5
Post-History:

Abstract

    This document describes the development and release schedule for
    Python 2.5.  The schedule primarily concerns itself with PEP-sized
    items.  Small features may be added up to and including the first
    beta release.  Bugs may be fixed until the final release.

    There will be at least two alpha releases, two beta releases, and
    one release candidate.  The release date is planned 19 August 2006.


Release Manager

    Anthony Baxter has volunteered to be Release Manager.

    Martin von Loewis is building the Windows installers,
    Ronald Oussoren is building the Mac installers,
    Fred Drake the doc packages and
    Sean Reifschneider the RPMs.


Release Schedule

    Note that this schedule is completely tentative. The number of alphas,
    betas and release candidates will be determined as the release process
    unfolds.

    alpha 1: April 5, 2006 [completed]
    alpha 2: April 27, 2006 [completed]
    alpha 3: May 27, 2006 [planned]
    beta 1:  June 24, 2006 [planned]
    beta 2:  July 15, 2006 [planned]
    rc 1:    August 5, 2006 [planned]
    final:   August 19, 2006 [planned]


Completed features for 2.5

    PEP 308: Conditional Expressions
    PEP 309: Partial Function Application
    PEP 314: Metadata for Python Software Packages v1.1
    PEP 328: Absolute/Relative Imports
    PEP 338: Executing Modules as Scripts
    PEP 341: Unified try-except/try-finally to try-except-finally
    PEP 342: Coroutines via Enhanced Generators
    PEP 343: The "with" Statement
	(still need updates in Doc/ref and for the contextlib module)
    PEP 352: Required Superclass for Exceptions
    PEP 353: Using ssize_t as the index type
    PEP 357: Allowing Any Object to be Used for Slicing

    - ASCII became the default coding

    - AST-based compiler
      - Access to C AST from Python through new _ast module

    - any()/all() builtin truth functions

    New standard library modules

      - cProfile -- suitable for profiling long running applications
        with minimal overhead

      - ctypes -- optional component of the windows installer

      - ElementTree and cElementTree -- by Fredrik Lundh

      - hashlib -- adds support for SHA-224, -256, -384, and -512
        (replaces old md5 and sha modules)

      - msilib -- for creating MSI files and bdist_msi in distutils.

      - pysqlite

      - setuptools

    Other notable features

      - Added support for reading shadow passwords (http://python.org/sf/579435)

      - Added support for the Unicode 4.1 UCD

      - Added PEP 302 zipfile/__loader__ support to the following modules:
        warnings, linecache, inspect, traceback, site, and doctest

      - Added pybench Python benchmark suite -- by Marc-Andre Lemburg

      - Add write support for mailboxes from the code in sandbox/mailbox.
        (Owner: A.M. Kuchling.  It would still be good if another person
        would take a look at the new code.)

      - Support for building "fat" Mac binaries (Intel and PPC)


Possible features for 2.5

    Each feature below should implemented prior to beta1 or
    will require BDFL approval for inclusion in 2.5.

    - Add @decorator decorator to functional, rename to functools?

    - Modules under consideration for inclusion:

      - wsgiref to the standard library
        SVN repository: svn://svn.eby-sarna.com/svnroot/wsgiref
        (Owner: Phillip Eby)

    - Upgrade pyexpat to use expat 2.0?
      (Patch by Trent Mick, #1462338)

    - Add new icons for Windows, MacOS and Unix with the new Python logo?
      (Owner: ???)
      Windows: http://mail.python.org/pipermail/python-dev/2006-April/063738.html
      MacOS: http://hcs.harvard.edu/~jrus/python/prettified-py-icons.png

    - Check the various bits of code in Demo/ all still work, update or 
      remove the ones that don't.
      (Owner: Anthony)

    - All modules in Modules/ should be updated to be ssize_t clean.
      (Owner: Neal)

    - Python core should compile cleanly with g++
      (Owner: Anthony)


Deferred until 2.6:

    - bdist_deb in distutils package
      http://mail.python.org/pipermail/python-dev/2006-February/060926.html

    - bdist_egg in distutils package
      (though bdist_egg is supported in setuptools)

    - pure python pgen module
      (Owner: Guido)

    - Remove the fpectl module?


Open issues

    - Missing documentation
      * ctypes (Thomas Heller)
      * ElementTree/cElementTree (Fredrik Lundh)
      * pysqlite (Gerhard Haering)
      * setuptools (written, needs conversion to proper format)

    - AST compiler problems
      (Owner: Jeremy Hylton)
       * http://python.org/sf/1474677  foo(b=1, 2) doesn't raise SyntaxError

       * eval(str(-sys.maxint - 1)) should produce an int, not long.
         when a constant it should not be stored in co_consts

       * string constants that are not assigned are in byte code
            def foo():
                "docstring" 
                "not a docstring" 
         the constant (not a docstring) should not be stored in co_consts

       * test_trace tests that were commented out for AST must be fixed
         only test_05_no_pop_tops remains outstanding
         (Owner: Jeremy Hylton)
         http://python.org/sf/1191458

    - xmlplus/xmlcore situation wrt ElementTree needs resolution
      (Owners: Fred Drake/Martin von Loewis/Fredrik Lundh)
      http://mail.python.org/pipermail/python-dev/2005-December/058752.html

    - should C modules listed in "Undocumented modules" be removed too?
      "timing" (listed as obsolete), "cl" (listed as possibly not up-to-date),
      and "sv" (listed as obsolete hardware specific).

Copyright

    This document has been placed in the public domain.



Local Variables:
mode: indented-text
indent-tabs-mode: nil
sentence-end-double-space: t
fill-column: 70
coding: utf-8
End:

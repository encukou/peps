PEP: 424
Title: A method for exposing a length hint
Version: $Revision$
Last-Modified: $Date
Author: Alex Gaynor <alex.gaynor@gmail.com>
Status: Draft
Type: Standards Track
Content-Type: text/x-rst
Created: 14-July-2012
Python-Version: 3.4
Post-History: http://mail.python.org/pipermail/python-dev/2012-July/120920.html

Abstract
========

CPython currently defines an ``__length_hint__`` method on several types, such
as various iterators. This method is then used by various other functions (such
as ``map``) to presize lists based on the estimated returned by
``__length_hint__``. Types can then define ``__length_hint__`` which are not
sized, and thus should not define ``__len__``, but can estimate or compute a
size (such as many iterators).

Proposal
========

This PEP proposes formally documenting ``__length_hint__`` for other
interpreter and non-standard library Python to implement.

``__length_hint__`` must return an integer (else a TypeError is raised), and is
not required to be accurate. It may return a value that is either larger or
smaller than the actual size ofthe container. It may raise a ``TypeError`` if a
specific instance cannot have its length estimated. It may not return a
negative value (else a ValueError is raised).

Rationale
=========

Being able to pre-allocate lists based on the expected size, as estimated by ``__length_hint__``, can be a significant optimization. CPython has been
observed to run some code faster than PyPy, purely because of this optimization
being present.

Copyright
=========

This document has been placed into the public domain.

..
    Local Variables:
    mode: indented-text
    indent-tabs-mode: nil
    sentence-end-double-space: t
    fill-column: 70
    coding: utf-8
